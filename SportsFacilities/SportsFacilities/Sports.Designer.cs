//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SportsModel", "FK__booking__Facilit__1367E606", "facilities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SportsFacilities.facility), "booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SportsFacilities.booking), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__booking__SlotID__145C0A3F", "slot", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SportsFacilities.slot), "booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SportsFacilities.booking), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__slotvsFac__Facil__0CBAE877", "facilities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SportsFacilities.facility), "slotvsFacilities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SportsFacilities.slotvsFacility), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__slotvsFac__SlotI__0DAF0CB0", "slot", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SportsFacilities.slot), "slotvsFacilities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SportsFacilities.slotvsFacility), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__booking__MemberI__25869641", "member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SportsFacilities.member), "booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SportsFacilities.booking), true)]

#endregion

namespace SportsFacilities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SportsAllEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SportsAllEntities object using the connection string found in the 'SportsAllEntities' section of the application configuration file.
        /// </summary>
        public SportsAllEntities() : base("name=SportsAllEntities", "SportsAllEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SportsAllEntities object.
        /// </summary>
        public SportsAllEntities(string connectionString) : base(connectionString, "SportsAllEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SportsAllEntities object.
        /// </summary>
        public SportsAllEntities(EntityConnection connection) : base(connection, "SportsAllEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<booking> bookings
        {
            get
            {
                if ((_bookings == null))
                {
                    _bookings = base.CreateObjectSet<booking>("bookings");
                }
                return _bookings;
            }
        }
        private ObjectSet<booking> _bookings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<facility> facilities
        {
            get
            {
                if ((_facilities == null))
                {
                    _facilities = base.CreateObjectSet<facility>("facilities");
                }
                return _facilities;
            }
        }
        private ObjectSet<facility> _facilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<slot> slots
        {
            get
            {
                if ((_slots == null))
                {
                    _slots = base.CreateObjectSet<slot>("slots");
                }
                return _slots;
            }
        }
        private ObjectSet<slot> _slots;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<slotvsFacility> slotvsFacilities
        {
            get
            {
                if ((_slotvsFacilities == null))
                {
                    _slotvsFacilities = base.CreateObjectSet<slotvsFacility>("slotvsFacilities");
                }
                return _slotvsFacilities;
            }
        }
        private ObjectSet<slotvsFacility> _slotvsFacilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BookedMember> BookedMembers
        {
            get
            {
                if ((_BookedMembers == null))
                {
                    _BookedMembers = base.CreateObjectSet<BookedMember>("BookedMembers");
                }
                return _BookedMembers;
            }
        }
        private ObjectSet<BookedMember> _BookedMembers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CancelledBooking> CancelledBookings
        {
            get
            {
                if ((_CancelledBookings == null))
                {
                    _CancelledBookings = base.CreateObjectSet<CancelledBooking>("CancelledBookings");
                }
                return _CancelledBookings;
            }
        }
        private ObjectSet<CancelledBooking> _CancelledBookings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrentBooking> CurrentBookings
        {
            get
            {
                if ((_CurrentBookings == null))
                {
                    _CurrentBookings = base.CreateObjectSet<CurrentBooking>("CurrentBookings");
                }
                return _CurrentBookings;
            }
        }
        private ObjectSet<CurrentBooking> _CurrentBookings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<occupancy> occupancies
        {
            get
            {
                if ((_occupancies == null))
                {
                    _occupancies = base.CreateObjectSet<occupancy>("occupancies");
                }
                return _occupancies;
            }
        }
        private ObjectSet<occupancy> _occupancies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<member> members
        {
            get
            {
                if ((_members == null))
                {
                    _members = base.CreateObjectSet<member>("members");
                }
                return _members;
            }
        }
        private ObjectSet<member> _members;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the bookings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobookings(booking booking)
        {
            base.AddObject("bookings", booking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the facilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofacilities(facility facility)
        {
            base.AddObject("facilities", facility);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the slots EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToslots(slot slot)
        {
            base.AddObject("slots", slot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the slotvsFacilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToslotvsFacilities(slotvsFacility slotvsFacility)
        {
            base.AddObject("slotvsFacilities", slotvsFacility);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BookedMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookedMembers(BookedMember bookedMember)
        {
            base.AddObject("BookedMembers", bookedMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CancelledBookings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCancelledBookings(CancelledBooking cancelledBooking)
        {
            base.AddObject("CancelledBookings", cancelledBooking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrentBookings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrentBookings(CurrentBooking currentBooking)
        {
            base.AddObject("CurrentBookings", currentBooking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the occupancies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTooccupancies(occupancy occupancy)
        {
            base.AddObject("occupancies", occupancy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomembers(member member)
        {
            base.AddObject("members", member);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="BookedMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BookedMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BookedMember object.
        /// </summary>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="memberName">Initial value of the MemberName property.</param>
        public static BookedMember CreateBookedMember(global::System.Int32 memberId, global::System.String memberName)
        {
            BookedMember bookedMember = new BookedMember();
            bookedMember.MemberId = memberId;
            bookedMember.MemberName = memberName;
            return bookedMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                if (_MemberId != value)
                {
                    OnMemberIdChanging(value);
                    ReportPropertyChanging("MemberId");
                    _MemberId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberId");
                    OnMemberIdChanged();
                }
            }
        }
        private global::System.Int32 _MemberId;
        partial void OnMemberIdChanging(global::System.Int32 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MemberName
        {
            get
            {
                return _MemberName;
            }
            set
            {
                if (_MemberName != value)
                {
                    OnMemberNameChanging(value);
                    ReportPropertyChanging("MemberName");
                    _MemberName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MemberName");
                    OnMemberNameChanged();
                }
            }
        }
        private global::System.String _MemberName;
        partial void OnMemberNameChanging(global::System.String value);
        partial void OnMemberNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="booking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class booking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new booking object.
        /// </summary>
        /// <param name="bookingId">Initial value of the BookingId property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="facilityId">Initial value of the FacilityId property.</param>
        /// <param name="slotID">Initial value of the SlotID property.</param>
        /// <param name="dateOfUse">Initial value of the DateOfUse property.</param>
        /// <param name="confirmed">Initial value of the confirmed property.</param>
        public static booking Createbooking(global::System.Int32 bookingId, global::System.Int32 memberId, global::System.Int32 facilityId, global::System.Int32 slotID, global::System.String dateOfUse, global::System.String confirmed)
        {
            booking booking = new booking();
            booking.BookingId = bookingId;
            booking.MemberId = memberId;
            booking.FacilityId = facilityId;
            booking.SlotID = slotID;
            booking.DateOfUse = dateOfUse;
            booking.confirmed = confirmed;
            return booking;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                if (_BookingId != value)
                {
                    OnBookingIdChanging(value);
                    ReportPropertyChanging("BookingId");
                    _BookingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BookingId");
                    OnBookingIdChanged();
                }
            }
        }
        private global::System.Int32 _BookingId;
        partial void OnBookingIdChanging(global::System.Int32 value);
        partial void OnBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private global::System.Int32 _MemberId;
        partial void OnMemberIdChanging(global::System.Int32 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacilityId
        {
            get
            {
                return _FacilityId;
            }
            set
            {
                OnFacilityIdChanging(value);
                ReportPropertyChanging("FacilityId");
                _FacilityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacilityId");
                OnFacilityIdChanged();
            }
        }
        private global::System.Int32 _FacilityId;
        partial void OnFacilityIdChanging(global::System.Int32 value);
        partial void OnFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SlotID
        {
            get
            {
                return _SlotID;
            }
            set
            {
                OnSlotIDChanging(value);
                ReportPropertyChanging("SlotID");
                _SlotID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SlotID");
                OnSlotIDChanged();
            }
        }
        private global::System.Int32 _SlotID;
        partial void OnSlotIDChanging(global::System.Int32 value);
        partial void OnSlotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DateOfUse
        {
            get
            {
                return _DateOfUse;
            }
            set
            {
                OnDateOfUseChanging(value);
                ReportPropertyChanging("DateOfUse");
                _DateOfUse = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DateOfUse");
                OnDateOfUseChanged();
            }
        }
        private global::System.String _DateOfUse;
        partial void OnDateOfUseChanging(global::System.String value);
        partial void OnDateOfUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WeekdayName
        {
            get
            {
                return _WeekdayName;
            }
            set
            {
                OnWeekdayNameChanging(value);
                ReportPropertyChanging("WeekdayName");
                _WeekdayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WeekdayName");
                OnWeekdayNameChanged();
            }
        }
        private global::System.String _WeekdayName;
        partial void OnWeekdayNameChanging(global::System.String value);
        partial void OnWeekdayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String confirmed
        {
            get
            {
                return _confirmed;
            }
            set
            {
                OnconfirmedChanging(value);
                ReportPropertyChanging("confirmed");
                _confirmed = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("confirmed");
                OnconfirmedChanged();
            }
        }
        private global::System.String _confirmed;
        partial void OnconfirmedChanging(global::System.String value);
        partial void OnconfirmedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="CancelledBooking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CancelledBooking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CancelledBooking object.
        /// </summary>
        /// <param name="bookingId">Initial value of the BookingId property.</param>
        /// <param name="memberName">Initial value of the MemberName property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="facilityName">Initial value of the FacilityName property.</param>
        public static CancelledBooking CreateCancelledBooking(global::System.Int32 bookingId, global::System.String memberName, global::System.String startTime, global::System.String endTime, global::System.String facilityName)
        {
            CancelledBooking cancelledBooking = new CancelledBooking();
            cancelledBooking.BookingId = bookingId;
            cancelledBooking.MemberName = memberName;
            cancelledBooking.StartTime = startTime;
            cancelledBooking.EndTime = endTime;
            cancelledBooking.FacilityName = facilityName;
            return cancelledBooking;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                if (_BookingId != value)
                {
                    OnBookingIdChanging(value);
                    ReportPropertyChanging("BookingId");
                    _BookingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BookingId");
                    OnBookingIdChanged();
                }
            }
        }
        private global::System.Int32 _BookingId;
        partial void OnBookingIdChanging(global::System.Int32 value);
        partial void OnBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MemberName
        {
            get
            {
                return _MemberName;
            }
            set
            {
                if (_MemberName != value)
                {
                    OnMemberNameChanging(value);
                    ReportPropertyChanging("MemberName");
                    _MemberName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MemberName");
                    OnMemberNameChanged();
                }
            }
        }
        private global::System.String _MemberName;
        partial void OnMemberNameChanging(global::System.String value);
        partial void OnMemberNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                if (_StartTime != value)
                {
                    OnStartTimeChanging(value);
                    ReportPropertyChanging("StartTime");
                    _StartTime = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StartTime");
                    OnStartTimeChanged();
                }
            }
        }
        private global::System.String _StartTime;
        partial void OnStartTimeChanging(global::System.String value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                if (_EndTime != value)
                {
                    OnEndTimeChanging(value);
                    ReportPropertyChanging("EndTime");
                    _EndTime = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EndTime");
                    OnEndTimeChanged();
                }
            }
        }
        private global::System.String _EndTime;
        partial void OnEndTimeChanging(global::System.String value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FacilityName
        {
            get
            {
                return _FacilityName;
            }
            set
            {
                if (_FacilityName != value)
                {
                    OnFacilityNameChanging(value);
                    ReportPropertyChanging("FacilityName");
                    _FacilityName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FacilityName");
                    OnFacilityNameChanged();
                }
            }
        }
        private global::System.String _FacilityName;
        partial void OnFacilityNameChanging(global::System.String value);
        partial void OnFacilityNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="CurrentBooking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrentBooking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrentBooking object.
        /// </summary>
        /// <param name="bookingId">Initial value of the BookingId property.</param>
        /// <param name="memberName">Initial value of the MemberName property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="facilityName">Initial value of the FacilityName property.</param>
        /// <param name="dateOfUse">Initial value of the DateOfUse property.</param>
        public static CurrentBooking CreateCurrentBooking(global::System.Int32 bookingId, global::System.String memberName, global::System.String startTime, global::System.String endTime, global::System.String facilityName, global::System.String dateOfUse)
        {
            CurrentBooking currentBooking = new CurrentBooking();
            currentBooking.BookingId = bookingId;
            currentBooking.MemberName = memberName;
            currentBooking.StartTime = startTime;
            currentBooking.EndTime = endTime;
            currentBooking.FacilityName = facilityName;
            currentBooking.DateOfUse = dateOfUse;
            return currentBooking;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                if (_BookingId != value)
                {
                    OnBookingIdChanging(value);
                    ReportPropertyChanging("BookingId");
                    _BookingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BookingId");
                    OnBookingIdChanged();
                }
            }
        }
        private global::System.Int32 _BookingId;
        partial void OnBookingIdChanging(global::System.Int32 value);
        partial void OnBookingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MemberName
        {
            get
            {
                return _MemberName;
            }
            set
            {
                if (_MemberName != value)
                {
                    OnMemberNameChanging(value);
                    ReportPropertyChanging("MemberName");
                    _MemberName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MemberName");
                    OnMemberNameChanged();
                }
            }
        }
        private global::System.String _MemberName;
        partial void OnMemberNameChanging(global::System.String value);
        partial void OnMemberNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                if (_StartTime != value)
                {
                    OnStartTimeChanging(value);
                    ReportPropertyChanging("StartTime");
                    _StartTime = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StartTime");
                    OnStartTimeChanged();
                }
            }
        }
        private global::System.String _StartTime;
        partial void OnStartTimeChanging(global::System.String value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                if (_EndTime != value)
                {
                    OnEndTimeChanging(value);
                    ReportPropertyChanging("EndTime");
                    _EndTime = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EndTime");
                    OnEndTimeChanged();
                }
            }
        }
        private global::System.String _EndTime;
        partial void OnEndTimeChanging(global::System.String value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FacilityName
        {
            get
            {
                return _FacilityName;
            }
            set
            {
                if (_FacilityName != value)
                {
                    OnFacilityNameChanging(value);
                    ReportPropertyChanging("FacilityName");
                    _FacilityName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FacilityName");
                    OnFacilityNameChanged();
                }
            }
        }
        private global::System.String _FacilityName;
        partial void OnFacilityNameChanging(global::System.String value);
        partial void OnFacilityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DateOfUse
        {
            get
            {
                return _DateOfUse;
            }
            set
            {
                if (_DateOfUse != value)
                {
                    OnDateOfUseChanging(value);
                    ReportPropertyChanging("DateOfUse");
                    _DateOfUse = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DateOfUse");
                    OnDateOfUseChanged();
                }
            }
        }
        private global::System.String _DateOfUse;
        partial void OnDateOfUseChanging(global::System.String value);
        partial void OnDateOfUseChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="facility")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class facility : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new facility object.
        /// </summary>
        /// <param name="facilityId">Initial value of the FacilityId property.</param>
        /// <param name="facilityName">Initial value of the FacilityName property.</param>
        public static facility Createfacility(global::System.Int32 facilityId, global::System.String facilityName)
        {
            facility facility = new facility();
            facility.FacilityId = facilityId;
            facility.FacilityName = facilityName;
            return facility;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacilityId
        {
            get
            {
                return _FacilityId;
            }
            set
            {
                if (_FacilityId != value)
                {
                    OnFacilityIdChanging(value);
                    ReportPropertyChanging("FacilityId");
                    _FacilityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FacilityId");
                    OnFacilityIdChanged();
                }
            }
        }
        private global::System.Int32 _FacilityId;
        partial void OnFacilityIdChanging(global::System.Int32 value);
        partial void OnFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FacilityName
        {
            get
            {
                return _FacilityName;
            }
            set
            {
                OnFacilityNameChanging(value);
                ReportPropertyChanging("FacilityName");
                _FacilityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FacilityName");
                OnFacilityNameChanged();
            }
        }
        private global::System.String _FacilityName;
        partial void OnFacilityNameChanging(global::System.String value);
        partial void OnFacilityNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new member object.
        /// </summary>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="memberName">Initial value of the MemberName property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static member Createmember(global::System.Int32 memberId, global::System.String memberName, global::System.String address1, global::System.String phone)
        {
            member member = new member();
            member.MemberId = memberId;
            member.MemberName = memberName;
            member.Address1 = address1;
            member.Phone = phone;
            return member;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                if (_MemberId != value)
                {
                    OnMemberIdChanging(value);
                    ReportPropertyChanging("MemberId");
                    _MemberId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberId");
                    OnMemberIdChanged();
                }
            }
        }
        private global::System.Int32 _MemberId;
        partial void OnMemberIdChanging(global::System.Int32 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MemberName
        {
            get
            {
                return _MemberName;
            }
            set
            {
                OnMemberNameChanging(value);
                ReportPropertyChanging("MemberName");
                _MemberName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MemberName");
                OnMemberNameChanged();
            }
        }
        private global::System.String _MemberName;
        partial void OnMemberNameChanging(global::System.String value);
        partial void OnMemberNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dateOfBirth
        {
            get
            {
                return _dateOfBirth;
            }
            set
            {
                OndateOfBirthChanging(value);
                ReportPropertyChanging("dateOfBirth");
                _dateOfBirth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dateOfBirth");
                OndateOfBirthChanged();
            }
        }
        private global::System.String _dateOfBirth;
        partial void OndateOfBirthChanging(global::System.String value);
        partial void OndateOfBirthChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__booking__MemberI__25869641", "booking")]
        public EntityCollection<booking> bookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<booking>("SportsModel.FK__booking__MemberI__25869641", "booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<booking>("SportsModel.FK__booking__MemberI__25869641", "booking", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="occupancy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class occupancy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new occupancy object.
        /// </summary>
        /// <param name="facilityname">Initial value of the facilityname property.</param>
        public static occupancy Createoccupancy(global::System.String facilityname)
        {
            occupancy occupancy = new occupancy();
            occupancy.facilityname = facilityname;
            return occupancy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String facilityname
        {
            get
            {
                return _facilityname;
            }
            set
            {
                if (_facilityname != value)
                {
                    OnfacilitynameChanging(value);
                    ReportPropertyChanging("facilityname");
                    _facilityname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("facilityname");
                    OnfacilitynameChanged();
                }
            }
        }
        private global::System.String _facilityname;
        partial void OnfacilitynameChanging(global::System.String value);
        partial void OnfacilitynameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String weekdayname
        {
            get
            {
                return _weekdayname;
            }
            set
            {
                OnweekdaynameChanging(value);
                ReportPropertyChanging("weekdayname");
                _weekdayname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("weekdayname");
                OnweekdaynameChanged();
            }
        }
        private global::System.String _weekdayname;
        partial void OnweekdaynameChanging(global::System.String value);
        partial void OnweekdaynameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OccupancyRate
        {
            get
            {
                return _OccupancyRate;
            }
            set
            {
                OnOccupancyRateChanging(value);
                ReportPropertyChanging("OccupancyRate");
                _OccupancyRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OccupancyRate");
                OnOccupancyRateChanged();
            }
        }
        private Nullable<global::System.Int32> _OccupancyRate;
        partial void OnOccupancyRateChanging(Nullable<global::System.Int32> value);
        partial void OnOccupancyRateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="slot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class slot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new slot object.
        /// </summary>
        /// <param name="slotId">Initial value of the SlotId property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        public static slot Createslot(global::System.Int32 slotId, global::System.String startTime, global::System.String endTime)
        {
            slot slot = new slot();
            slot.SlotId = slotId;
            slot.StartTime = startTime;
            slot.EndTime = endTime;
            return slot;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SlotId
        {
            get
            {
                return _SlotId;
            }
            set
            {
                if (_SlotId != value)
                {
                    OnSlotIdChanging(value);
                    ReportPropertyChanging("SlotId");
                    _SlotId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SlotId");
                    OnSlotIdChanged();
                }
            }
        }
        private global::System.Int32 _SlotId;
        partial void OnSlotIdChanging(global::System.Int32 value);
        partial void OnSlotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.String _StartTime;
        partial void OnStartTimeChanging(global::System.String value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.String _EndTime;
        partial void OnEndTimeChanging(global::System.String value);
        partial void OnEndTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__booking__SlotID__145C0A3F", "booking")]
        public EntityCollection<booking> bookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<booking>("SportsModel.FK__booking__SlotID__145C0A3F", "booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<booking>("SportsModel.FK__booking__SlotID__145C0A3F", "booking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__slotvsFac__SlotI__0DAF0CB0", "slotvsFacilities")]
        public EntityCollection<slotvsFacility> slotvsFacilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<slotvsFacility>("SportsModel.FK__slotvsFac__SlotI__0DAF0CB0", "slotvsFacilities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<slotvsFacility>("SportsModel.FK__slotvsFac__SlotI__0DAF0CB0", "slotvsFacilities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="slotvsFacility")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class slotvsFacility : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new slotvsFacility object.
        /// </summary>
        /// <param name="facilityId">Initial value of the FacilityId property.</param>
        /// <param name="slotId">Initial value of the SlotId property.</param>
        public static slotvsFacility CreateslotvsFacility(global::System.Int32 facilityId, global::System.Int32 slotId)
        {
            slotvsFacility slotvsFacility = new slotvsFacility();
            slotvsFacility.FacilityId = facilityId;
            slotvsFacility.SlotId = slotId;
            return slotvsFacility;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacilityId
        {
            get
            {
                return _FacilityId;
            }
            set
            {
                if (_FacilityId != value)
                {
                    OnFacilityIdChanging(value);
                    ReportPropertyChanging("FacilityId");
                    _FacilityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FacilityId");
                    OnFacilityIdChanged();
                }
            }
        }
        private global::System.Int32 _FacilityId;
        partial void OnFacilityIdChanging(global::System.Int32 value);
        partial void OnFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SlotId
        {
            get
            {
                return _SlotId;
            }
            set
            {
                if (_SlotId != value)
                {
                    OnSlotIdChanging(value);
                    ReportPropertyChanging("SlotId");
                    _SlotId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SlotId");
                    OnSlotIdChanged();
                }
            }
        }
        private global::System.Int32 _SlotId;
        partial void OnSlotIdChanging(global::System.Int32 value);
        partial void OnSlotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Available
        {
            get
            {
                return _Available;
            }
            set
            {
                OnAvailableChanging(value);
                ReportPropertyChanging("Available");
                _Available = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Available");
                OnAvailableChanged();
            }
        }
        private global::System.String _Available;
        partial void OnAvailableChanging(global::System.String value);
        partial void OnAvailableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__slotvsFac__Facil__0CBAE877", "facilities")]
        public facility facility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<facility>("SportsModel.FK__slotvsFac__Facil__0CBAE877", "facilities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<facility>("SportsModel.FK__slotvsFac__Facil__0CBAE877", "facilities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<facility> facilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<facility>("SportsModel.FK__slotvsFac__Facil__0CBAE877", "facilities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<facility>("SportsModel.FK__slotvsFac__Facil__0CBAE877", "facilities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__slotvsFac__SlotI__0DAF0CB0", "slot")]
        public slot slot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<slot>("SportsModel.FK__slotvsFac__SlotI__0DAF0CB0", "slot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<slot>("SportsModel.FK__slotvsFac__SlotI__0DAF0CB0", "slot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<slot> slotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<slot>("SportsModel.FK__slotvsFac__SlotI__0DAF0CB0", "slot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<slot>("SportsModel.FK__slotvsFac__SlotI__0DAF0CB0", "slot", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="passwords">Initial value of the passwords property.</param>
        public static user Createuser(global::System.String username, global::System.String passwords)
        {
            user user = new user();
            user.username = username;
            user.passwords = passwords;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                if (_username != value)
                {
                    OnusernameChanging(value);
                    ReportPropertyChanging("username");
                    _username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("username");
                    OnusernameChanged();
                }
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String passwords
        {
            get
            {
                return _passwords;
            }
            set
            {
                OnpasswordsChanging(value);
                ReportPropertyChanging("passwords");
                _passwords = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("passwords");
                OnpasswordsChanged();
            }
        }
        private global::System.String _passwords;
        partial void OnpasswordsChanging(global::System.String value);
        partial void OnpasswordsChanged();

        #endregion

    
    }

    #endregion

    
}
